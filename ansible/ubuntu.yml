---
- hosts: 127.0.0.1
  connection: local
  sudo: true
  
  vars:
    dev_env_dir: /usr/local/dev-env

  tasks:

    - name: Gather kernel version
      command: uname -r
      register: kernel_version
      
    - name: Gather current user's name
      command: whoami
      register: current_user

    - name: Add docker repository to apt lists
      apt_repository: repo='deb deb https://apt.dockerproject.org/repo ubuntu-{{ ansible_distribution_release|lower }} main' state=present filename='docker-engine'

    - name: Install the base required dependencies and suggested packages
      apt:
        update-cache: yes
        with_items:
          - linux-image-extra-{{ kernel_version }}
          - linux-image-extra-virtual
          - dnsmasq
          - docker-engine
          - git

    - name: Allow current user to execute docker commands
      user: name={{ current_user }} groups=docker append=yes

    - name: Install docker-compose
      command: "{{ item }} chdir=/tmp/"
        with_items:
          - "curl -L https://github.com/docker/compose/releases/download/1.7.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose"
          - "chmod +x /usr/local/bin/docker-compose"
    
    - name: Configure dnsmasq to play well with dnsdock
      copy:
        content: "server=/loc/172.17.0.1\nexcept-interface=docker0\ndomain-needed\ncache-size=0"
        dest: /etc/dnsmasq.d/docker-resolver
        
    - name: Start dnsdock resolver
      shell: "docker run --restart=always -d -v /var/run/docker.sock:/var/run/docker.sock --name dnsdock -p 172.17.0.1:53:53/udp aacebedo/dnsdock:v1.15.0-amd64"



TODO:

* check for sudo tu play well with the rest of the script (namely putting user in the correct groups)
* verify the content of dnsmasq config file
* overall syntax check etc
