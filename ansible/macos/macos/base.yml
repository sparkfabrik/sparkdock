---
- hosts: 127.0.0.1
  connection: local

  vars:
    dev_env_dir: /opt/sparkdock
    homebrew_prefix: "{{ (ansible_machine == 'arm64') | ternary('/opt/homebrew', '/usr/local') }}"
    homebrew_install_path: "{{ homebrew_prefix }}/Homebrew"
    homebrew_brew_bin_path: "{{ homebrew_prefix }}/bin"

  tasks:
    - name: Debug homebrew paths
      debug:
        msg:
          - "Prefix: {{ homebrew_prefix }}"
          - "Install path: {{ homebrew_install_path }}"
          - "Bin path: {{ homebrew_brew_bin_path }}"

    - name: Update and upgrade homebrew packages
      community.general.homebrew:
        update_homebrew: true
        upgrade_all: true

    - name: Remove unwanted packages
      community.general.homebrew:
        name:
          - docker-compose
          - neofetch
          - "php@8.3"
        state: absent
        update_homebrew: false

    - name: Install docker and cloud tools
      tags: cask
      community.general.homebrew_cask:
        name:
          - docker
          - google-cloud-sdk
        state: present
        install_options: force

    - name: Install gcloud components
      command: "{{ homebrew_brew_bin_path }}/gcloud components install gke-gcloud-auth-plugin gsutil"
      register: command_result
      changed_when: "'All components are up to date' not in command_result.stderr"

    - name: Install cloud native tools
      community.general.homebrew:
        name:
          - awscli
          - docker-credential-helper-ecr
          - imagemagick
          - mas
          - kubernetes-cli
          - k9s
          - kind
          - kubectx
          - skaffold
          - stern
        state: present
        update_homebrew: false

    - name: Install system utilities
      community.general.homebrew:
        name:
          - fastfetch
          - gpg
          - gpg2
          - jless
          - pinentry-mac
          - mactop
          - mergiraf
          - thefuck
          - fzf
          - navi
          - jq
          - yadm
          - tmate
          - tmux
          - watch
        state: present
        update_homebrew: false

    - name: Install development tools
      community.general.homebrew:
        name:
          - gh
          - glab
          - "node@20"
          - yarn-completion
          - corepack
          - "php@8.2"
          - golang
          - gitleaks
          - git-credential-manager
        state: present
        update_homebrew: false

    - name: Link php 8.2
      community.general.homebrew:
        name: "php@8.2"
        state: linked

    - name: Install fonts and applications
      tags: cask
      community.general.homebrew_cask:
        name:
          - font-droid-sans-mono-nerd-font
          - font-inconsolata-nerd-font
          - font-fira-code-nerd-font
          - google-chrome
          - ghostty
          - iterm2
          - maccy
          - cameracontroller
          - visual-studio-code
          - slack
          - zoom
          - monitorcontrol
        state: present
        install_options: force

    - name: Configure DNS resolver
      block:
        - name: Create resolver directory
          file: path=/etc/resolver state=directory mode=0755

        - name: Create and configure loc resolver
          copy:
            dest: /etc/resolver/loc
            content: |
              nameserver 127.0.0.1
              port 19322
            mode: 0755

        - name: Clear dns cache
          command: killall -HUP mDNSResponder
      become: yes
      become_method: sudo

    - name: Install system scripts
      block:
        - name: Ensure /usr/local/bin exists
          file: path=/usr/local/bin state=directory

        - name: Copy system scripts
          copy:
            src: "{{ item.src }}"
            dest: "{{ item.dest }}"
            mode: "0755"
          loop:
            - {
                src: "{{ dev_env_dir }}/config/macos/bin/run-dinghy-proxy",
                dest: "/usr/local/bin/run-dinghy-proxy",
              }
            - {
                src: "{{ dev_env_dir }}/config/bin/test-dinghy-proxy",
                dest: "/usr/local/bin/test-dinghy-proxy",
              }
            - {
                src: "{{ dev_env_dir }}/config/macos/bin/ayse-get-sm",
                dest: "/usr/local/bin/ayse-get-sm",
              }
      become: yes
      become_method: sudo

    - name: Configure keyboard settings
      tags: keyboard
      copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
      loop:
        - {
            src: "config/keyboard/en-intl-alt-gr-dead-keys.keylayout",
            dest: "~/Library/Keyboard Layouts",
          }
        - {
            src: "config/keyboard/DefaultKeyBinding.dict",
            dest: "~/Library/KeyBindings",
          }
