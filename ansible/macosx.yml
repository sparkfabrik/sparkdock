---
- hosts: 127.0.0.1
  connection: local

  vars:
    dev_env_dir: /usr/local/dev-env
    docker_compose_version: 1.10.0
    docker_compose_hash: https://raw.githubusercontent.com/Homebrew/homebrew-core/4b5c36d5db034cdbdcdeae2044f73a01297e2046/Formula/docker-compose.rb
    docker_version: 1.13.0
    docker_hash: https://raw.githubusercontent.com/Homebrew/homebrew-core/cb63ea86976554c64bb591a3cff9565f4f3e3d95/Formula/docker.rb
    dnsdock_image: aacebedo/dnsdock:v1.15.0-amd64

  tasks:

    - name: Check Sudo Password
      command: ls
      become: yes
      become_method: sudo

    - name: Uninstall docker and dinghy binaries.
      command: brew uninstall --force docker docker-machine docker-compose dinghy || true

    - name: Manually clean docker binaries binaries.
      command: rm -rf /usr/local/bin/docker /usr/local/bin/docker-machine /usr/local/bin/docker-compose /usr/local/bin/docker-machine-driver /usr/local/bin/docker-machine-nfs*

    - name: Install docker binaries with brew.
      shell: "{{ item }}"
      with_items:
        - "brew install {{ docker_hash }}"
        - "brew install {{ docker_compose_hash }}"
        - "brew install docker-machine"

    - name: Link latest docker binaries
      command: brew link --overwrite docker docker-machine docker-compose

    - name: Remove legacy dev docker-machine.
      shell: docker-machine stop dev -y && docker-machine rm dev -y || true

    - name: Remove dinghy docker-machine.
      shell: docker-machine stop dinghy -y && docker-machine rm dinghy -y || true

    - name: Install dinghy.
      homebrew: name=dinghy state=present

    - name: Set dinghy home.
      file: path=~/.dinghy state=directory

    - name: Configure dinghy preferences.
      file:
        src: "{{ dev_env_dir }}/config/macosx/dinghy/preferences.yml"
        dest: ~/.dinghy/preferences.yml
        state: link
        force: yes

    - name: Create dinghy machine.
      shell: >
        unset DOCKER_HOST DOCKER_CERT_PATH DOCKER_MACHINE_IP DOCKER_MACHINE_NAME DOCKER_TLS_VERIFY
        && dinghy create --provider virtualbox --memory {{ VM_RAM }} --disk {{ VM_DISK }}

    - name: Install dnsmasq
      homebrew: name=dnsmasq state=present

    - name: Configure dnsmasq
      file:
        src: "{{ dev_env_dir }}/config/macosx/dnsmasq.conf"
        dest: /usr/local/etc/dnsmasq.conf
        state: link
        force: yes

    - name: Link dnsmasq.
      homebrew: name=dnsmasq state=linked

    - name: Restart dnsmasq.
      command: brew services restart dnsmasq
      become: yes
      become_method: sudo

    - name: Get docker-machine ip
      shell: "docker-machine ip dinghy"
      register: ip_machine

    - name: Create resolver directory
      file: path=/etc/resolver state=directory mode=0755
      become: yes
      become_method: sudo

    - name: Delete docker.loc old file if present
      file: path=/etc/resolver/docker.loc state=absent mode=0755
      become: yes
      become_method: sudo

    - name: Create loc resolver file
      file: path=/etc/resolver/loc state=touch mode=0755
      become: yes
      become_method: sudo

    - name: Add configuration to /etc/resolver/loc
      lineinfile: dest=/etc/resolver/loc state=present line="nameserver 127.0.0.1"
      become: yes
      become_method: sudo

    - name: Start dnsdock container
      shell: "{{ item }}"
      with_items:
        - "eval $(dinghy env) && docker rm -vf dnsdock || true"
        - "eval $(dinghy env) && docker rm -vf dinghy_http_proxy || true"
        - "eval $(dinghy env) && docker run --restart=always -d -v /var/run/docker.sock:/var/run/docker.sock --name dnsdock -p 172.17.0.1:53:53/udp {{ dnsdock_image }}"

    - name: Add static routing
      shell: "route delete 172.17.0.0 && route -n add -net 172.16.0.0/12 {{ ip_machine.stdout }}"
      become: yes
      become_method: sudo
      register: command_result
      failed_when: "'FAILED' in command_result.stderr"

    - name: Clear dns cache
      command: killall -HUP mDNSResponder
      become: yes
      become_method: sudo

    - name: Add staff group to sudoers to run route command with no password
      lineinfile:
        dest: /etc/sudoers
        state: present
        line: '%staff ALL=(ALL) NOPASSWD: /sbin/route'
      become: yes
      become_method: sudo

    - name: Create launchctl script to run docker-machine and add routing tables
      file:
        src: "{{ dev_env_dir }}/config/macosx/com.docker.machine.dev.plist"
        dest: ~/Library/LaunchAgents/com.docker.machine.dev.plist
        state: link
        force: yes
