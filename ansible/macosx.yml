---
- hosts: 127.0.0.1
  connection: local

  vars:
    dev_env_dir: /usr/local/dev-env

  tasks:

    - name: Read common variables
      include_vars:
        file: _common.yml
        name: common

    - name: Check Sudo Password
      command: ls
      become: yes
      become_method: sudo

    - name: Install or upgrade docker toolbox
      homebrew_cask: name=docker-toolbox state=present

    - name: Install dnsmasq
      homebrew: name=dnsmasq state=present

    - name: Configure dnsmasq
      file:
        src: "{{ dev_env_dir }}/config/macosx/dnsmasq.conf"
        dest: /usr/local/etc/dnsmasq.conf
        state: link
        force: yes

    - name: Link dnsmasq
      homebrew: name=dnsmasq state=linked

    - name: Create local docker dev machine
      command: docker-machine create dev -d virtualbox --virtualbox-disk-size 50000 --virtualbox-cpu-count 1 --virtualbox-memory 4096 --engine-opt dns=172.17.42.1  --engine-opt dns=8.8.8.8 --engine-opt dns=8.8.4.4 --engine-opt bip=172.17.42.1/24
      register: command_result
      failed_when: "'FAILED' in command_result.stderr"

    - name: Start dev
      command: /usr/local/bin/docker-machine start dev
      register: command_result
      failed_when: "'FAILED' in command_result.stderr"

    - name: Get docker-machine ip
      shell: "docker-machine ip dev"
      register: ip_machine

    - name: Install docker-machine-nfs
      get_url: url=https://raw.githubusercontent.com/adlogix/docker-machine-nfs/master/docker-machine-nfs.sh dest=/usr/local/bin/docker-machine-nfs mode=0755 force=yes

    - name: Configure docker-machine-nfs
      command: /usr/local/bin/docker-machine-nfs dev
      ignore_errors: True

    - name: Create resolver directory
      file: path=/etc/resolver state=directory mode=0755
      become: yes
      become_method: sudo

    - name: Delete docker.loc old file if present
      file: path=/etc/resolver/docker.loc state=absent mode=0755
      become: yes
      become_method: sudo

    - name: Create loc resolver file
      file: path=/etc/resolver/loc state=touch mode=0755
      become: yes
      become_method: sudo

    - name: Add configuration to /etc/resolver/loc
      lineinfile: dest=/etc/resolver/loc state=present line="nameserver 127.0.0.1"
      become: yes
      become_method: sudo

    - name: Start dnsdock container
      shell: "{{ item }}"
      with_items:
        - "eval $(docker-machine env dev) && docker rm -vf dnsdock || true"
        - "eval $(docker-machine env dev) && docker run --restart=always -d -v /var/run/docker.sock:/var/run/docker.sock --name dnsdock -p 172.17.42.1:53:53/udp {{ common.dnsdock_image }}"

    - name: Add static routing
      shell: "route delete 172.17.0.0 && route -n add -net 172.17.0.0 {{ ip_machine.stdout }}"
      become: yes
      become_method: sudo
      register: command_result
      failed_when: "'FAILED' in command_result.stderr"

    - name: Clear dns cache
      command: killall -HUP mDNSResponder
      become: yes
      become_method: sudo

    - name: Add staff group to sudoers to run route command with no password
      lineinfile:
        dest: /etc/sudoers
        state: present
        line: '%staff ALL=(ALL) NOPASSWD: /sbin/route'
      become: yes
      become_method: sudo

    - name: Create launchctl script to run docker-machine at runtime
      file:
        src: "{{ dev_env_dir }}/config/macosx/com.docker.machine.dev.plist"
        dest: ~/Library/LaunchAgents/com.docker.machine.dev.plist
        state: link
        force: yes
