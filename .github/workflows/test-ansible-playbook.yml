name: Test Ansible Playbook

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

jobs:
  test-macos:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-14, macos-15]
      fail-fast: false
    env:
      TERM: xterm-256color
      SHELL: /bin/zsh

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set ZSH as default shell and environment vars
        run: |
          echo "Setting up environment..."
          echo "SHELL=/bin/zsh" >> $GITHUB_ENV
          echo "TERM=xterm-256color" >> $GITHUB_ENV

          # Ensure ZSH is the default shell for the current user
          sudo chsh -s /bin/zsh $(whoami)

          # Create a .zshrc file if it doesn't exist
          touch ~/.zshrc
          echo 'export TERM=xterm-256color' >> ~/.zshrc
          echo 'export SHELL=/bin/zsh' >> ~/.zshrc

          # Verify shell setup
          echo "Current shell: $SHELL"
          echo "Current TERM: $TERM"

      - name: Install Sparkdock using installation script
        run: |
          # Modify the script to run non-interactively and skip any prompts
          sed -i '' 's/--ask-become-pass/-e "ansible_become_password=" --become/g' ./bin/sparkdock.macos

          # Make the script executable
          chmod +x ./bin/install.macos
          chmod +x ./bin/sparkdock.macos
          chmod +x ./bin/common/utils.sh

          # Run the installation script with sudo access
          sudo mkdir -p /opt/sparkdock
          sudo chown -R $(whoami) /opt/sparkdock

          # Install Sparkdock to /opt/sparkdock
          cp -R ./* /opt/sparkdock/

          # Run the modified installation script
          /bin/zsh -c "/opt/sparkdock/bin/sparkdock.macos skip-update"

      - name: Verify installations
        run: |
          echo "Verifying key installations..."
          brew list | grep docker || echo "Docker not found"
          brew list | grep kubernetes-cli || echo "kubectl not found"
          brew list | grep google-cloud-sdk || echo "gcloud not found"
          brew list | grep awscli || echo "aws not found"

          echo "Test completed on ${{ matrix.os }}"

      - name: Clean up test installations (optional)
        if: always()
        run: |
          echo "Cleaning up..."
          sudo rm -rf /opt/sparkdock
