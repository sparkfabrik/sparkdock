name: Claude Code

on:
    issue_comment:
        types: [created]
    pull_request_review_comment:
        types: [created]
    issues:
        types: [opened, assigned]
    pull_request_review:
        types: [submitted]

jobs:
    claude:
        if: |
            (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
            (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
            (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
            (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
        runs-on: ubuntu-latest
        permissions:
            contents: write
            pull-requests: write
            issues: write
            id-token: write
            actions: read # Required for Claude to read CI results on PRs
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  fetch-depth: 1

            - name: Run Claude Code
              id: claude
              uses: anthropics/claude-code-action@v1
              with:
                  anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}

                  # Optional: Customize the trigger phrase (default: @claude)
                  # trigger_phrase: "/claude"

                  # Optional: Trigger when specific user is assigned to an issue
                  # assignee_trigger: "claude-bot"

                  # Optional: Configure Claude's behavior with CLI arguments
                  claude_args: |
                      --model claude-sonnet-4-5-20250929
                      --system-prompt "Follow Sparkdock project conventions from CLAUDE.md and .github/copilot-instructions.md and .github/instructions/ directory."

                  # Optional: Advanced settings configuration
                  # settings: |
                  #   {
                  #     "env": {
                  #       "NODE_ENV": "test"
                  #     }
                  #   }
